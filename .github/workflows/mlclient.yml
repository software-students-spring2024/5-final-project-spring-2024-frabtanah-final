name: mlclient ci-cd
on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, closed]
    branches: [main, master]

jobs:
  build-test-deliver-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "^3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user pipenv
          pipenv --python $(which python)
          pipenv install pytz
          pipenv install python-dateutil
          pipenv install build
          pipenv install requests
          pipenv install flask
          pipenv install pytest
          pipenv install gitcommitlogger
          pipenv install bson
          pipenv install pymongo

      - name: Build docker images
        run: |
          docker build -t avachani/plant-recog:mlclient ./mlclient
      

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push avachani/plant-recog:mlclient


      - name: Deploy to Digital Ocean
        run: |
          # Commands to deploy subsystem to Digital Ocean

      - name: Deploy to Digital Ocean
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} root@64.225.51.26 << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/mlclient:${{ github.sha }}
            docker stop mlclient || true
            docker rm mlclient || true
            docker run --name mlclient -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/mlclient:${{ github.sha }}
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Test 
        run: |
          pipenv run pytest


